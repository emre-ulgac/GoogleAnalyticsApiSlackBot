# -*- coding: utf-8 -*-
"""SlackBot.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1BA990n7Bd6Cwpml_bOyr4T87QbOpGH0t

# **Google Analytics Api and Slack Api **
"""

!pip3 install slackclient
import os
import time
import re
import slack
import argparse
from apiclient.discovery import build
import httplib2
from oauth2client import client
from oauth2client import file
from oauth2client import tools
SCOPES = ['https://www.googleapis.com/auth/analytics.readonly']
DISCOVERY_URI = ('https://analyticsreporting.googleapis.com/$discovery/rest')
CLIENT_SECRETS_PATH = 'client_secret_520384118523-kmlcpu5jbf0a5bhug338o6er8lgbt7tj.apps.googleusercontent.com.json' #replace with the path to JSON File
VIEW_ID = '171349635' #replace the Google analytic view ID 

def initialize_analyticsreporting():
  parser = argparse.ArgumentParser(
      formatter_class=argparse.RawDescriptionHelpFormatter,
      parents=[tools.argparser])
  flags = parser.parse_args([])
  flow = client.flow_from_clientsecrets(
      CLIENT_SECRETS_PATH, scope=SCOPES,
      message=tools.message_if_missing(CLIENT_SECRETS_PATH))
  storage = file.Storage('analyticsreporting.dat')
  credentials = storage.get()
  if credentials is None or credentials.invalid:
    credentials = tools.run_flow(flow, storage, flags)
  http = credentials.authorize(http=httplib2.Http())
  analytics = build('analytics', 'v4', http=http, discoveryServiceUrl=DISCOVERY_URI)
  return analytics
def get_report(analytics):
  return analytics.reports().batchGet(
      body={
        'reportRequests': [
        {
          'viewId': VIEW_ID,
          'dateRanges': [{'startDate': '7daysAgo', 'endDate': 'today'}],
          'metrics': [{'expression': 'ga:sessions'}],
           'dimensions': [{'name': 'ga:Hour'}]
       

        }]
      }
  ).execute()
def main():
  analytics = initialize_analyticsreporting()
  response = get_report(analytics) #get the response from the API
  print(response) 
  result=response.get('reports', [])[0].get('data', {}).get('rows',[])[9].get('metrics',[])[0]['values'][0]
  #print the response from the API
  
  #Write your own slack bot api token
  SLACK_API_TOKEN ='xoxb-707234146965-707261389445-OmTdoEi1ningyG4hMIKAbOEo'
  client = slack.WebClient(token=SLACK_API_TOKEN)

  response = client.chat_postMessage(
   channel='#general',
   text="Son 7 gün saat 9 daki session sayısı: "+result)


if __name__ == '__main__':
  main()